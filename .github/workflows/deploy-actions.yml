name: 'Deploy Infra'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Install terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  ansible:
    name: 'Install Ansible'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible requests

  deploy:
    needs: [terraform, ansible]
    name: 'Actual deployment'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Create .ssh folder
        run: mkdir ansible/.ssh
      
      - name: Echo Private key into file
        run: 'echo "$SSH_KEY" > ansible/.ssh/id_rsa'

      - name: Echo Private key into file
        run: 'echo "$SSH_KEY_PUB" > ansible/.ssh/id_rsa.pub'

      - name: Set correct permission on private key
        run: chmod 600 ansible/.ssh/id_rsa

      - name: Deploy infra
        run: ./infrasetup.sh create