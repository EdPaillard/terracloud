apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  releaseName: prometheus
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: flux-system
      version: 55.1.0
  interval: 5m
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
  values:
    global:
      pspEnabled: false

    alertmanager:
      enabled: false

    grafana:
      enabled: true
      service:
        type: ClusterIP
      image:
        repository: grafana/grafana
      defaultDashboardsTimezone: Europe/Paris
      deploymentStrategy:
        type: Recreate
      rbac:
        pspEnabled: false
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-terracloud
          cert-manager.io/common-name: grafana.terracloud.lifoto.co
        hosts:
          - grafana.terracloud.lifoto.co
        ingressClassName: traefik
        path: /
        tls:
          - secretName: grafana-general-tls
            hosts:
            - grafana.terracloud.lifoto.co
      sidecar:
        image:
          repository: kiwigrid/k8s-sidecar
        datasources:
          defaultDatasourceEnabled: false
      additionalDataSources:
        - name: Terracloud
          type: prometheus
          uid: prometheus
          url: http://prometheus-kube-prometheus-prometheus.monitoring:9090/
          access: proxy
          isDefault: false
          jsonData:
            timeInterval: 30s
        - name: Terracloud-Logs
          type: loki
          uid: Terracloud-Logs
          url: http://loki.terracloud.lifoto.co
          access: proxy
          isDefault: false
      # extraConfigmapMounts: 
      #   - name: grafana-cacert
      #     configMap: grafana-cacert
      #     mountPath: /etc/grafana/ssl/CACert.pem
      #     subPath: CACert.pem
      #     readOnly: true
      persistence:
        enabled: true
        size: 500Mi
        # storageClassName: storage-class-test
        # existingClaim: pvc-grafana
    #   initChownData:
    #     enabled: false
    #   grafana.ini:
    #     auth.ldap:
    #       enabled: false
    #   ldap:
    #     enabled: false

    # kubeControllerManager:
    #   insecureSkipVerify: true  

    # kubeEtcd:
    #   service:
    #     enabled: true
    #     port: 2379
    #     targetPort: 2379
    #   serviceMonitor:
    #     scheme: https
    #     serverName: localhost
    #     caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca
    #     certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client
    #     keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key      

    # kubeScheduler:
    #   insecureSkipVerify: true   

    # prometheus-node-exporter:
    #   tolerations:
    #     - key: "CriticalAddonsOnly"
    #       operator: Exists
    #       effect: "NoExecute"

    prometheus:
      serviceAccount:
        name: "prometheus"
      service:
        type: ClusterIP
      ingress:
        enabled: true
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          cert-manager.io/cluster-issuer: "letsencrypt-terracloud"
          cert-manager.io/common-name: prometheus.terracloud.lifoto.co
        hosts:
          - prometheus.terracloud.lifoto.co
        ingressClassName: traefik
        pathType: ImplementationSpecific
        tls:
          - secretName: prometheus-general-tls
            hosts:
              - prometheus.terracloud.lifoto.co

      # prometheusSpec:
      #   secrets:
      #     - etcd-client-cert
      #     - ca-cert
      #   retention: 62d
      #   retentionSize: 35GB
      #   storageSpec:
      #     volumeClaimTemplate:
      #       spec:
      #         storageClassName: storage-class-test
      #         accessModes: ["ReadWriteOnce"]
      #         resources:
      #           requests:
      #             storage: 36Gi
        #ruleNamespaceSelector:
        #  any: true
        #serviceMonitorSelector:
          #matchLabels:
            #prometheus: todiscover
        serviceMonitorSelectorNilUsesHelmValues: false
        additionalScrapeConfigs: []
